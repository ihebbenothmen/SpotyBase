{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../shared/claim.service\";\nimport * as i2 from \"@angular/router\";\nfunction ListComplaintsComponent_tr_34_button_23_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function ListComplaintsComponent_tr_34_button_23_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const claim_r1 = i0.ɵɵnextContext().$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.updateComplaintStatus(claim_r1));\n    });\n    i0.ɵɵtext(1, \"Trait\\u00E9\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"disabled\", ctx_r2.isUpdating);\n  }\n}\nfunction ListComplaintsComponent_tr_34_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"td\");\n    i0.ɵɵtext(14);\n    i0.ɵɵpipe(15, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"td\")(17, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function ListComplaintsComponent_tr_34_Template_button_click_17_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const claim_r1 = restoredCtx.$implicit;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.deleteClaim(claim_r1.id));\n    });\n    i0.ɵɵtext(18, \"Delete\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(19, \"td\")(20, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function ListComplaintsComponent_tr_34_Template_button_click_20_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const claim_r1 = restoredCtx.$implicit;\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.updateComplaints(claim_r1.id));\n    });\n    i0.ɵɵtext(21, \"Update\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(22, \"td\");\n    i0.ɵɵtemplate(23, ListComplaintsComponent_tr_34_button_23_Template, 2, 1, \"button\", 13);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const claim_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", claim_r1.id, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", claim_r1.objet, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", claim_r1.message, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", claim_r1.image, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", claim_r1.typeClaim, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", claim_r1.status ? \"Trait\\u00E9\" : \"Non trait\\u00E9\", \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(15, 8, claim_r1.date, \"dd/MM/yy\"));\n    i0.ɵɵadvance(9);\n    i0.ɵɵproperty(\"ngIf\", !claim_r1.status);\n  }\n}\nexport class ListComplaintsComponent {\n  constructor(claimService, router) {\n    this.claimService = claimService;\n    this.router = router;\n    this.selectedStatus = '';\n    this.isUpdating = false;\n    this.complaints = [];\n    this.filteredComplaints = [];\n  }\n  ngOnInit() {\n    this.loadComplaints();\n  }\n  reloadData() {}\n  deleteClaim(id) {\n    this.claimService.deleteClaim(id).subscribe({\n      next: response => console.log(response),\n      error: error => console.log(error),\n      complete: () => console.log('Delete request completed.')\n    });\n  }\n  updateComplaint() {\n    this.claimService.updateComplaint(this.claims.id, true).subscribe(() => {\n      console.log('Complaint updated successfully');\n      this.claims.status = true;\n    }, error => {\n      console.error('Error updating complaint', error);\n    });\n  }\n  updateComplaintStatus(complaint) {\n    this.isUpdating = true;\n    this.claimService.updateComplaint(complaint.id, true).subscribe(() => {\n      console.log('Complaint updated successfully');\n      complaint.status = true;\n      this.isUpdating = false;\n    }, error => {\n      console.error('Error updating complaint', error);\n      this.isUpdating = false;\n    });\n  }\n  loadComplaints() {\n    this.claimService.getClaim().subscribe(complaints => {\n      this.complaints = complaints;\n      this.filteredComplaints = complaints;\n    }, error => {\n      console.error('Error loading complaints', error);\n    });\n  }\n  onStatusChange() {\n    if (this.selectedStatus === '') {\n      this.filteredComplaints = this.complaints;\n    } else {\n      const status = this.selectedStatus === 'true';\n      this.claimService.getComplaintsByStatus(status).subscribe(complaints => {\n        this.filteredComplaints = complaints;\n      }, error => {\n        console.error('Error filtering complaints by status', error);\n      });\n    }\n  }\n  updateComplaints(id) {\n    this.router.navigate(['front/editComplaints', id]);\n  }\n}\nListComplaintsComponent.ɵfac = function ListComplaintsComponent_Factory(t) {\n  return new (t || ListComplaintsComponent)(i0.ɵɵdirectiveInject(i1.ClaimService), i0.ɵɵdirectiveInject(i2.Router));\n};\nListComplaintsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ListComplaintsComponent,\n  selectors: [[\"app-list-complaints\"]],\n  inputs: {\n    claims: \"claims\"\n  },\n  decls: 35,\n  vars: 2,\n  consts: [[1, \"col-12\"], [1, \"rounded\", \"h-100\", \"p-4\"], [1, \"mb-4\"], [3, \"ngModel\", \"ngModelChange\", \"change\"], [\"value\", \"\"], [\"value\", \"true\"], [\"value\", \"false\"], [1, \"table-responsive\"], [1, \"table\", \"table-dark\"], [\"scope\", \"col\"], [4, \"ngFor\", \"ngForOf\"], [1, \"btn\", \"btn-danger\", 3, \"click\"], [1, \"btn\", \"btn-info\", 2, \"margin-left\", \"10px\", 3, \"click\"], [\"class\", \"btn btn-success\", 3, \"disabled\", \"click\", 4, \"ngIf\"], [1, \"btn\", \"btn-success\", 3, \"disabled\", \"click\"]],\n  template: function ListComplaintsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h6\", 2);\n      i0.ɵɵtext(3, \"List Of Events\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"select\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function ListComplaintsComponent_Template_select_ngModelChange_4_listener($event) {\n        return ctx.selectedStatus = $event;\n      })(\"change\", function ListComplaintsComponent_Template_select_change_4_listener() {\n        return ctx.onStatusChange();\n      });\n      i0.ɵɵelementStart(5, \"option\", 4);\n      i0.ɵɵtext(6, \"Tous\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"option\", 5);\n      i0.ɵɵtext(8, \"Reclamations Traitees\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"option\", 6);\n      i0.ɵɵtext(10, \"Reclamations Non Traitees\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(11, \"hr\");\n      i0.ɵɵelementStart(12, \"div\", 7)(13, \"table\", 8)(14, \"thead\")(15, \"tr\")(16, \"th\", 9);\n      i0.ɵɵtext(17, \"#\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"th\", 9);\n      i0.ɵɵtext(19, \"Objet\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"th\", 9);\n      i0.ɵɵtext(21, \"Mssage\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"th\", 9);\n      i0.ɵɵtext(23, \"Image\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"th\", 9);\n      i0.ɵɵtext(25, \"TypeClaim\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"th\", 9);\n      i0.ɵɵtext(27, \"Status\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"th\", 9);\n      i0.ɵɵtext(29, \"Date\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(30, \"th\", 9);\n      i0.ɵɵtext(31, \"Action\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(32, \"tbody\");\n      i0.ɵɵelement(33, \"tr\");\n      i0.ɵɵtemplate(34, ListComplaintsComponent_tr_34_Template, 24, 11, \"tr\", 10);\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.selectedStatus);\n      i0.ɵɵadvance(30);\n      i0.ɵɵproperty(\"ngForOf\", ctx.filteredComplaints);\n    }\n  },\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["i0","ListComplaintsComponent","constructor","claimService","router","ngOnInit","loadComplaints","reloadData","deleteClaim","id","subscribe","next","response","console","log","error","complete","updateComplaint","claims","status","updateComplaintStatus","complaint","isUpdating","getClaim","complaints","filteredComplaints","onStatusChange","selectedStatus","getComplaintsByStatus","updateComplaints","navigate","selectors","inputs","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\IHEB\\Desktop\\User-final\\pidev-vff\\front\\src\\app\\Complaints\\list-complaints\\list-complaints.component.html","C:\\Users\\IHEB\\Desktop\\User-final\\pidev-vff\\front\\src\\app\\Complaints\\list-complaints\\list-complaints.component.ts"],"sourcesContent":["\r\n<div class=\"col-12\">\r\n    <div class=\" rounded h-100 p-4\">\r\n        <h6 class=\"mb-4\">List Of Events</h6>\r\n        <select [(ngModel)]=\"selectedStatus\" (change)=\"onStatusChange()\">\r\n            <option value=\"\">Tous</option>\r\n            <option value=\"true\">Reclamations Traitees</option>\r\n            <option value=\"false\">Reclamations Non Traitees</option>\r\n          </select>\r\n          <hr>\r\n        <div class=\"table-responsive\" >\r\n          \r\n            <table class=\"table table-dark\">\r\n                <thead>\r\n                    <tr>  \r\n                      \r\n                        <th scope=\"col\">#</th>\r\n                        <th scope=\"col\">Objet</th>\r\n                        <th scope=\"col\">Mssage</th>\r\n                        <th scope=\"col\">Image</th>\r\n                        <th scope=\"col\">TypeClaim</th>\r\n\r\n\r\n                        <th scope=\"col\">Status</th>\r\n                        <th scope=\"col\">Date</th>\r\n\r\n                        <th scope=\"col\">Action</th>\r\n\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <tr *ngFor=\"let claim of filteredComplaints\">\r\n                            <td>      {{ claim.id }}    </td>\r\n                            <td>      {{ claim.objet }}    </td>\r\n                            <td>      {{ claim.message }}    </td>\r\n                            <td>      {{ claim.image }}    </td>\r\n                            <td>      {{ claim.typeClaim }}    </td>\r\n                                                    <td>      {{ claim.status  ? 'Traité' : 'Non traité' }}    </td>\r\n                            <td>{{ claim.date | date: 'dd/MM/yy' }}</td>\r\n                            <td> <button (click)=\"deleteClaim(claim.id)\" class=\"btn btn-danger\">Delete</button>\r\n                                <td>              <button (click)=\"updateComplaints(claim.id)\" class=\"btn btn-info\" style=\"margin-left: 10px\">Update</button>\r\n</td> <td>\r\n\r\n    <button class=\"btn btn-success\" *ngIf=\"!claim.status\" [disabled]=\"isUpdating\" (click)=\"updateComplaintStatus(claim)\">Traité</button>\r\n</td>\r\n                    </tr>\r\n                   \r\n                   \r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { Claim } from '../../model/Complaints/claim.model';\r\nimport { ClaimService } from '../../shared/claim.service';\r\nimport { Observable } from \"rxjs\";\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-list-complaints',\r\n  templateUrl: './list-complaints.component.html',\r\n  styles: [\r\n  ]\r\n})\r\nexport class ListComplaintsComponent  implements OnInit {\r\n  @Input() claims!: Claim;\r\n\r\n  claim!: Observable<Claim[]>;\r\n  selectedStatus: string = '';\r\n\r\n  constructor(private claimService: ClaimService  ,private router: Router){ }\r\n\r\n  ngOnInit() {\r\n    this.loadComplaints();\r\n\r\n  }\r\n  reloadData() {\r\n  }\r\n  deleteClaim(id: number): void {\r\n    this.claimService.deleteClaim(id).subscribe({\r\n      next: response => console.log(response),\r\n      error: error => console.log(error),\r\n      complete: () => console.log('Delete request completed.')\r\n    });\r\n  }\r\n  updateComplaint() {\r\n    this.claimService.updateComplaint(this.claims.id, true).subscribe(() => {\r\n      console.log('Complaint updated successfully');\r\n      this.claims.status = true;\r\n    }, (error) => {\r\n      console.error('Error updating complaint', error);\r\n    });\r\n  }\r\n  isUpdating = false;\r\n\r\n  updateComplaintStatus(complaint: Claim) {\r\n    this.isUpdating = true;\r\n    this.claimService.updateComplaint(complaint.id, true).subscribe(() => {\r\n      console.log('Complaint updated successfully');\r\n      complaint.status = true;\r\n      this.isUpdating = false;\r\n    }, (error) => {\r\n      console.error('Error updating complaint', error);\r\n      this.isUpdating = false;\r\n    });\r\n  }\r\n  complaints: Claim[] = [];\r\n  filteredComplaints: Claim[] = [];\r\n  loadComplaints() {\r\n    this.claimService.getClaim().subscribe((complaints) => {\r\n      this.complaints = complaints;\r\n      this.filteredComplaints = complaints;\r\n    }, (error) => {\r\n      console.error('Error loading complaints', error);\r\n    });\r\n  }\r\n  onStatusChange() {\r\n    \r\n    if (this.selectedStatus === '') {\r\n      this.filteredComplaints = this.complaints;\r\n    } else {\r\n      const status = (this.selectedStatus === 'true');\r\n      this.claimService.getComplaintsByStatus(status).subscribe((complaints) => {\r\n        this.filteredComplaints = complaints;\r\n      }, (error) => {\r\n        console.error('Error filtering complaints by status', error);\r\n      });\r\n    }\r\n  }\r\n  updateComplaints(id: number){\r\n    this.router.navigate(['front/editComplaints', id]);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}