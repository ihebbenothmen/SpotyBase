{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst baseUrl = 'http://localhost:8060/InterMove/Agents/';\nexport class AgentService {\n  constructor(http) {\n    this.http = http;\n  }\n  getAll() {\n    return this.http.get(baseUrl + \"AllAgents\");\n  }\n  get(id) {\n    return this.http.get(`${baseUrl}getAgentById/${id}`);\n  }\n  create(data, id) {\n    return this.http.post(`${baseUrl}addAgent/${id}`, data);\n  }\n  update(data) {\n    return this.http.put(`${baseUrl}updateAgent`, data);\n  }\n  delete(id) {\n    return this.http.delete(`${baseUrl}deleteAgent/${id}`);\n  }\n  deleteAll() {\n    return this.http.delete(baseUrl + \"deleteAll\");\n  }\n  findByTitle(name) {\n    return this.http.get(`${baseUrl}getAgencyByName/${name}`);\n  }\n}\nAgentService.ɵfac = function AgentService_Factory(t) {\n  return new (t || AgentService)(i0.ɵɵinject(i1.HttpClient));\n};\nAgentService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AgentService,\n  factory: AgentService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAKA,MAAMA,OAAO,GAAG,yCAAyC;AAKzD,OAAM,MAAOC,YAAY;EAEvBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAgB;EAExCC,MAAM;IACJ,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAUL,OAAO,GAAC,WAAW,CAAC;EACpD;EAEAK,GAAG,CAACC,EAAO;IACT,OAAO,IAAI,CAACH,IAAI,CAACE,GAAG,CAAQ,GAAGL,OAAO,gBAAgBM,EAAE,EAAE,CAAC;EAC7D;EAEAC,MAAM,CAACC,IAAS,EAACF,EAAO;IACtB,OAAO,IAAI,CAACH,IAAI,CAACM,IAAI,CAAC,GAAGT,OAAO,YAAYM,EAAE,EAAE,EAAEE,IAAI,CAAC;EACzD;EAEAE,MAAM,CAACF,IAAS;IACd,OAAO,IAAI,CAACL,IAAI,CAACQ,GAAG,CAAC,GAAGX,OAAO,aAAa,EAAEQ,IAAI,CAAC;EACrD;EAEAI,MAAM,CAACN,EAAO;IACZ,OAAO,IAAI,CAACH,IAAI,CAACS,MAAM,CAAC,GAAGZ,OAAO,eAAeM,EAAE,EAAE,CAAC;EACxD;EAEAO,SAAS;IACP,OAAO,IAAI,CAACV,IAAI,CAACS,MAAM,CAACZ,OAAO,GAAC,WAAW,CAAC;EAC9C;EAEAc,WAAW,CAACC,IAAS;IACnB,OAAO,IAAI,CAACZ,IAAI,CAACE,GAAG,CAAU,GAAGL,OAAO,mBAAmBe,IAAI,EAAE,CAAC;EACpE;;AA9BWd,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAe,SAAZf,YAAY;EAAAgB,YAFX;AAAM","names":["baseUrl","AgentService","constructor","http","getAll","get","id","create","data","post","update","put","delete","deleteAll","findByTitle","name","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\IHEB\\Desktop\\SpotyBase\\front\\src\\app\\accomodation\\services\\agent.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Agent } from '../models/agent.model';\r\n\r\nconst baseUrl = 'http://localhost:8060/InterMove/Agents/';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AgentService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getAll(): Observable<Agent[]> {\r\n    return this.http.get<Agent[]>(baseUrl+\"AllAgents\");\r\n  }\r\n\r\n  get(id: any): Observable<Agent> {\r\n    return this.http.get<Agent>(`${baseUrl}getAgentById/${id}`);\r\n  }\r\n\r\n  create(data: any,id: any): Observable<any> {\r\n    return this.http.post(`${baseUrl}addAgent/${id}`, data);\r\n  }\r\n\r\n  update(data: any): Observable<any> {\r\n    return this.http.put(`${baseUrl}updateAgent`, data);\r\n  }\r\n\r\n  delete(id: any): Observable<any> {\r\n    return this.http.delete(`${baseUrl}deleteAgent/${id}`);\r\n  }\r\n\r\n  deleteAll(): Observable<any> {\r\n    return this.http.delete(baseUrl+\"deleteAll\");\r\n  }\r\n\r\n  findByTitle(name: any): Observable<Agent[]> {\r\n    return this.http.get<Agent[]>(`${baseUrl}getAgencyByName/${name}`);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}