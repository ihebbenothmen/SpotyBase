{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { FacebookLoginProvider, GoogleLoginProvider } from 'angularx-social-login';\nlet LoginComponent = class LoginComponent {\n  constructor(formChildGroup, route, router, auth, social, authService) {\n    this.formChildGroup = formChildGroup;\n    this.route = route;\n    this.router = router;\n    this.auth = auth;\n    this.social = social;\n    this.authService = authService;\n    this.isSignedin = false;\n    this.error = '';\n    this.siteKey = '6Le0g8MlAAAAAKsY61qRO6Txkh6NinLCc7QHNasV';\n  }\n  ngOnInit() {\n    this.isSignedin = this.auth.isUserSignedin();\n    if (this.isSignedin) {\n      this.router.navigateByUrl('/front');\n    }\n    this.myFormLogin();\n  }\n  myFormLogin() {\n    this.checkoutParentGroup = this.formChildGroup.group({\n      user: this.formChildGroup.group({\n        email: new FormControl('', [Validators.required, Validators.pattern('^[\\\\w-\\\\.]+@([\\\\w-]+\\\\.)+[\\\\w-]{2,4}$')]),\n        password: new FormControl('', [Validators.required])\n      })\n    });\n  }\n  doSignin() {\n    if (this.checkoutParentGroup.invalid) {\n      return this.checkoutParentGroup.markAllAsTouched();\n    }\n    this.auth.userActive(this.checkoutParentGroup.controls['user'].value.email, this.checkoutParentGroup.controls['user'].value.password).subscribe({\n      next: response => {\n        let ac = response.active;\n        console.log('ac:', ac);\n        if (ac == 1) {\n          this.auth.signin(this.checkoutParentGroup.controls['user'].value.email, this.checkoutParentGroup.controls['user'].value.password).subscribe({\n            next: response => {\n              let role = response.user.roletype;\n              console.log(role);\n              if (role === 'ADMIN') {\n                this.router.navigateByUrl(\"/\");\n              } else {\n                this.router.navigateByUrl('/front');\n              }\n            }\n          });\n        } else if (ac === 0) {\n          sessionStorage.setItem(\"emailActive\", this.checkoutParentGroup.controls['user'].value.email);\n          this.router.navigateByUrl(\"/active\");\n        } else {\n          alert(\"Invalid Email or Password\");\n        }\n      }\n    });\n    this.isSignedin = true;\n    return true;\n  }\n  get email() {\n    return this.checkoutParentGroup.get('user.email');\n  }\n  get password() {\n    return this.checkoutParentGroup.get('user.password');\n  }\n  signInWithGoogle() {\n    this.authService.signIn(GoogleLoginProvider.PROVIDER_ID).then(data => {\n      this.social.loginWithGoogle(data.idToken).subscribe({\n        next: response => {\n          this.router.navigateByUrl(\"home\");\n        }\n      });\n      console.log(data.idToken);\n    });\n  }\n  signInWithFB() {\n    this.authService.signIn(FacebookLoginProvider.PROVIDER_ID).then(data => {\n      this.social.loginWithFacebook(data.authToken).subscribe({\n        next: response => {\n          this.router.navigateByUrl(\"/front\");\n          //\tlet name=response.user.userRoles[0].roleName;\n          //\tconsole.log('role:', name);\n          //  console.log(sessionStorage.getItem(\"id\"));\n        }\n      });\n\n      console.log(data.authToken);\n    });\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})], LoginComponent);\nexport { LoginComponent };","map":{"version":3,"mappings":"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","names":["Component","FormControl","Validators","FacebookLoginProvider","GoogleLoginProvider","LoginComponent","constructor","formChildGroup","route","router","auth","social","authService","siteKey","ngOnInit","isSignedin","isUserSignedin","navigateByUrl","myFormLogin","checkoutParentGroup","group","user","email","required","pattern","password","doSignin","invalid","markAllAsTouched","userActive","controls","value","subscribe","next","response","ac","active","console","log","signin","role","roletype","sessionStorage","setItem","alert","get","signInWithGoogle","signIn","PROVIDER_ID","then","data","loginWithGoogle","idToken","signInWithFB","loginWithFacebook","authToken","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\IHEB\\Desktop\\User-final\\pidev-vff\\front\\src\\app\\User\\Front_end\\login\\login.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthService } from '../auth.service';\nimport { FacebookLoginProvider, GoogleLoginProvider, SocialAuthService } from 'angularx-social-login';\nimport { SocialService } from './social.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\tsiteKey:string;\n\t\n\t\n\n\t\n\tisSignedin = false;\n\n\terror: string = '';\n\tcheckoutParentGroup!: FormGroup;\n\n\tconstructor(private formChildGroup: FormBuilder, private route: ActivatedRoute, private router: Router, private auth: AuthService, private social: SocialService, private authService: SocialAuthService) { this.siteKey = '6Le0g8MlAAAAAKsY61qRO6Txkh6NinLCc7QHNasV'; }\n\n\tngOnInit() : void {\n\t\t\n\n\n\t\tthis.isSignedin = this.auth.isUserSignedin();\n\n\t\tif(this.isSignedin) {\n\t\t\tthis.router.navigateByUrl('/front');\n\t\t\t\n\t\t}\n\t\tthis.myFormLogin()\n\t}\n\t\n\t\n\t  myFormLogin(){\n\t\tthis.checkoutParentGroup = this.formChildGroup.group({\n\t\t  user:this.formChildGroup.group({\n\t\t\temail: new FormControl('',[\n\t\t\t  Validators.required,\n\t\t\t  Validators.pattern('^[\\\\w-\\\\.]+@([\\\\w-]+\\\\.)+[\\\\w-]{2,4}$')\n\t\t\t]),\n\t\t\tpassword: new FormControl('',[\n\t\t\t  Validators.required\n\t\t\t])\n\t\t  })\n\t\t})\n\t  }\n\tdoSignin() {\n\t\tif (this.checkoutParentGroup.invalid) {\n\t\t\treturn this.checkoutParentGroup.markAllAsTouched();\n\t\t}\n\t\tthis.auth.userActive(\n\t\t\tthis.checkoutParentGroup.controls['user'].value.email,\n\t\t\tthis.checkoutParentGroup.controls['user'].value.password\n\t\t).subscribe({\n\t\t\tnext: response => {\n\t\t\t\tlet ac = response.active;\n\t\t\t\tconsole.log('ac:', ac);\n\n\t\t\t\tif (ac == 1) {\n\t\t\t\t\tthis.auth.signin(\n\t\t\t\t\t\tthis.checkoutParentGroup.controls['user'].value.email,\n\t\t\t\t\t\tthis.checkoutParentGroup.controls['user'].value.password\n\t\t\t\t\t).subscribe({\n\t\t\t\t\t\tnext: response => {\n\t\t\t\t\t\t\tlet role = response.user.roletype;\n\t\t\t\t\t\t\tconsole.log(role);\n\t\t\t\t\t\t\tif (role === 'ADMIN') {\n\t\t\t\t\t\t\t\tthis.router.navigateByUrl(\"/\")\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tthis.router.navigateByUrl('/front');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t})\n\t\t\t\t} else if (ac === 0) {\n\t\t\t\t\tsessionStorage.setItem(\"emailActive\", this.checkoutParentGroup.controls['user'].value.email)\n\t\t\t\t\tthis.router.navigateByUrl(\"/active\")\n\t\t\t\t} else {\n\t\t\t\t\talert(\"Invalid Email or Password\")\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\tthis.isSignedin = true;\n\t\treturn true;\n\t}\n\t  get email(){\n    return this.checkoutParentGroup.get('user.email')\n  }\n  get password(){\n    return this.checkoutParentGroup.get('user.password')\n  }\n\t\n\n\tsignInWithGoogle(): void {\n\t\tthis.authService.signIn(GoogleLoginProvider.PROVIDER_ID).then(\n\t\t  data => {\n\t\t\tthis.social.loginWithGoogle(data.idToken).subscribe({\n\t\t\t  next: response =>{\n\t\t\t\tthis.router.navigateByUrl(\"home\")\n\t\t\t  }\n\t\t\t})\n\t\t\tconsole.log(data.idToken)\n\t\t  }\n\t\t);\n\t  }\n\n\n\tsignInWithFB(): void {\n\t\tthis.authService.signIn(FacebookLoginProvider.PROVIDER_ID).then(\n\t\t\tdata => {\n\t\t\t\tthis.social.loginWithFacebook(data.authToken).subscribe({\n\t\t\t\t\tnext: response => {\n\t\t\t\t\t\tthis.router.navigateByUrl(\"/front\")\n\t\t\t\t\t\t//\tlet name=response.user.userRoles[0].roleName;\n\t\t\t\t\t\t//\tconsole.log('role:', name);\n\t\t\t\t\t\t//  console.log(sessionStorage.getItem(\"id\"));\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tconsole.log(data.authToken)\n\t\t\t}\n\t\t);\n\t}\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}