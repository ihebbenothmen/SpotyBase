{"ast":null,"code":"import { Event } from '../../model/Event/event.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../shared/event.service\";\nimport * as i3 from \"@angular/forms\";\nexport class UpdateEventComponent {\n  constructor(route, router, eventService, formBuilder) {\n    this.route = route;\n    this.router = router;\n    this.eventService = eventService;\n    this.formBuilder = formBuilder;\n  }\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      this.id = +params['id'];\n      this.eventService.getEventId(this.id).subscribe(event => {\n        this.event = event;\n        // pré-remplir les champs du formulaire avec les valeurs de l'événement\n        this.eventForm = this.formBuilder.group({\n          title: [this.event.title],\n          description: [this.event.description],\n          dateD: [this.event.dateD],\n          dateF: [this.event.dateF],\n          nbreDePlaces: [this.event.nbreDePlaces],\n          image: [this.event.image],\n          speaker: [this.event.speaker],\n          typeEvent: [this.event.typeEvent],\n          modaliteEvent: [this.event.modaliteEvent]\n        });\n      });\n    });\n  }\n  updateEvent() {\n    this.eventService.updateEvent(this.id, this.event).subscribe({\n      next: data => {\n        console.log(data);\n        this.event = new Event();\n        this.gotoList();\n      },\n      error: error => console.log(error)\n    });\n  }\n  onSubmit() {\n    this.updateEvent();\n  }\n  gotoList() {\n    this.router.navigate(['/listEvents']);\n  }\n}\nUpdateEventComponent.ɵfac = function UpdateEventComponent_Factory(t) {\n  return new (t || UpdateEventComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.EventsService), i0.ɵɵdirectiveInject(i3.FormBuilder));\n};\nUpdateEventComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UpdateEventComponent,\n  selectors: [[\"app-update-event\"]],\n  decls: 38,\n  vars: 9,\n  consts: [[\"enctype\", \"multipart/form-data\", 3, \"ngSubmit\"], [\"type\", \"text\", \"id\", \"firstName\", \"required\", \"\", \"name\", \"firstName\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"date\", \"name\", \"dateD\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"date\", \"name\", \"dateF\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"number\", \"name\", \"nbreDePlaces\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"file\", \"name\", \"speaker\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"name\", \"speaker\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"typeEvent\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"modaliteEvent\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\"]],\n  template: function UpdateEventComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function UpdateEventComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(1, \"label\");\n      i0.ɵɵtext(2, \"Title\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"input\", 1);\n      i0.ɵɵlistener(\"ngModelChange\", function UpdateEventComponent_Template_input_ngModelChange_3_listener($event) {\n        return ctx.event.title = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"label\");\n      i0.ɵɵtext(5, \"Description\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"input\", 1);\n      i0.ɵɵlistener(\"ngModelChange\", function UpdateEventComponent_Template_input_ngModelChange_6_listener($event) {\n        return ctx.event.description = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"label\");\n      i0.ɵɵtext(8, \"Start Date\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"input\", 2);\n      i0.ɵɵlistener(\"ngModelChange\", function UpdateEventComponent_Template_input_ngModelChange_9_listener($event) {\n        return ctx.event.dateD = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"label\");\n      i0.ɵɵtext(11, \"End Date\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function UpdateEventComponent_Template_input_ngModelChange_12_listener($event) {\n        return ctx.event.dateF = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"label\");\n      i0.ɵɵtext(14, \"Number of Places\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function UpdateEventComponent_Template_input_ngModelChange_15_listener($event) {\n        return ctx.event.nbreDePlaces = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"label\");\n      i0.ɵɵtext(17, \"Image\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"input\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function UpdateEventComponent_Template_input_ngModelChange_18_listener($event) {\n        return ctx.event.image = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"label\");\n      i0.ɵɵtext(20, \"Speaker\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"input\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function UpdateEventComponent_Template_input_ngModelChange_21_listener($event) {\n        return ctx.event.speaker = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"label\");\n      i0.ɵɵtext(23, \"Type of Event\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"select\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function UpdateEventComponent_Template_select_ngModelChange_24_listener($event) {\n        return ctx.event.typeEvent = $event;\n      });\n      i0.ɵɵelementStart(25, \"option\");\n      i0.ɵɵtext(26, \"Workshop\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"option\");\n      i0.ɵɵtext(28, \"Webinaire\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(29, \"label\");\n      i0.ɵɵtext(30, \"Modality of Event\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(31, \"select\", 8);\n      i0.ɵɵlistener(\"ngModelChange\", function UpdateEventComponent_Template_select_ngModelChange_31_listener($event) {\n        return ctx.event.modaliteEvent = $event;\n      });\n      i0.ɵɵelementStart(32, \"option\");\n      i0.ɵɵtext(33, \"Presentiel\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(34, \"option\");\n      i0.ɵɵtext(35, \"Distanciel\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(36, \"button\", 9);\n      i0.ɵɵtext(37, \"Update Event\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.event.title);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.event.description);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.event.dateD);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.event.dateF);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.event.nbreDePlaces);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.event.image);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.event.speaker);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.event.typeEvent);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngModel\", ctx.event.modaliteEvent);\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["Event","UpdateEventComponent","constructor","route","router","eventService","formBuilder","ngOnInit","params","subscribe","id","getEventId","event","eventForm","group","title","description","dateD","dateF","nbreDePlaces","image","speaker","typeEvent","modaliteEvent","updateEvent","next","data","console","log","gotoList","error","onSubmit","navigate","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\IHEB\\Desktop\\User-final\\pidev-vff\\front\\src\\app\\Events\\update-event\\update-event.component.ts","C:\\Users\\IHEB\\Desktop\\User-final\\pidev-vff\\front\\src\\app\\Events\\update-event\\update-event.component.html"],"sourcesContent":["import { ActivatedRoute, Router } from '@angular/router';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Event } from '../../model/Event/event.model';\r\nimport { EventsService } from '../../shared/event.service';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-update-event',\r\n  templateUrl: './update-event.component.html',\r\n  styles: [\r\n  ]\r\n})\r\nexport class UpdateEventComponent implements OnInit {\r\n  id!: number;\r\n  event!: Event ;\r\n  eventForm!: FormGroup;\r\n  constructor(private route: ActivatedRoute,private router: Router,\r\n    private eventService: EventsService , private formBuilder: FormBuilder) { }\r\n \r\n    ngOnInit() {\r\n      this.route.params.subscribe(params => {\r\n        this.id = +params['id'];\r\n        this.eventService.getEventId(this.id)\r\n          .subscribe((event: Event) => {\r\n            this.event = event;\r\n            // pré-remplir les champs du formulaire avec les valeurs de l'événement\r\n            this.eventForm = this.formBuilder.group({\r\n              title: [this.event.title],\r\n              description: [this.event.description],\r\n              dateD: [this.event.dateD],\r\n              dateF: [this.event.dateF],\r\n              nbreDePlaces: [this.event.nbreDePlaces],\r\n              image: [this.event.image],\r\n              speaker: [this.event.speaker],\r\n              typeEvent: [this.event.typeEvent],\r\n              modaliteEvent: [this.event.modaliteEvent],\r\n            });\r\n          });\r\n      });\r\n    }\r\n  \r\n\r\n  updateEvent() {\r\n    this.eventService.updateEvent(this.id, this.event)\r\n      .subscribe({\r\n        next: data => {\r\n          console.log(data);\r\n          this.event = new Event();\r\n          this.gotoList();\r\n        },\r\n        error: error => console.log(error)\r\n      });\r\n  }\r\n  \r\n\r\n  onSubmit() {\r\n    this.updateEvent();   \r\n\r\n     \r\n  }\r\n\r\n  gotoList() {\r\n    this.router.navigate(['/listEvents']);\r\n  }\r\n  \r\n\r\n}\r\n","    <form (ngSubmit)=\"onSubmit()\" enctype=\"multipart/form-data\">    \r\n        <label>Title</label>\r\n    <input type=\"text\" class=\"form-control\" id=\"firstName\" required [(ngModel)]=\"event.title\" name=\"firstName\">\r\n    \r\n    <label>Description</label>\r\n    <input type=\"text\" class=\"form-control\" id=\"firstName\" required [(ngModel)]=\"event.description\" name=\"firstName\">\r\n\r\n    <label>Start Date</label>\r\n    <input type=\"date\" [(ngModel)]=\"event.dateD\" name=\"dateD\" required>\r\n    \r\n    <label>End Date</label>\r\n    <input type=\"date\" [(ngModel)]=\"event.dateF\" name=\"dateF\" required>\r\n    \r\n    <label>Number of Places</label>\r\n    <input type=\"number\" [(ngModel)]=\"event.nbreDePlaces\" name=\"nbreDePlaces\" required>\r\n    \r\n    <label>Image</label>\r\n    <input type=\"file\" [(ngModel)]=\"event.image\" name=\"speaker\" required>\r\n\r\n    <label>Speaker</label>\r\n    <input type=\"text\" [(ngModel)]=\"event.speaker\" name=\"speaker\" required>\r\n    \r\n    <label>Type of Event</label>\r\n    <select [(ngModel)]=\"event.typeEvent\" name=\"typeEvent\" required>\r\n        <option>Workshop</option>\r\n        <option>Webinaire</option>\r\n\r\n    </select>\r\n    \r\n    <label>Modality of Event</label>\r\n    <select [(ngModel)]=\"event.modaliteEvent\" name=\"modaliteEvent\" required>\r\n        <option>Presentiel</option>\r\n        <option>Distanciel</option>  \r\n    </select>\r\n    \r\n    <button type=\"submit\">Update Event</button>\r\n  </form>\r\n   "]},"metadata":{},"sourceType":"module","externalDependencies":[]}