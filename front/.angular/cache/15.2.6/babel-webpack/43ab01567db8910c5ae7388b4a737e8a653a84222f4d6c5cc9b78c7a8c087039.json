{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../user.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nfunction ListUsersComponent_tr_21_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"td\")(14, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function ListUsersComponent_tr_21_Template_button_click_14_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const user_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.openForm(user_r1));\n    });\n    i0.ɵɵtext(15, \"Edit\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(16, \"td\")(17, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function ListUsersComponent_tr_21_Template_button_click_17_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const user_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.deleteUser(user_r1));\n    });\n    i0.ɵɵtext(18, \"Delete\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const user_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r1.userid);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r1.firstname);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r1.lastname);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r1.email);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r1.cin);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r1.phone);\n  }\n}\nexport class ListUsersComponent {\n  constructor(userService) {\n    this.userService = userService;\n    this.userDetails = null;\n    this.studentToUpdate = {\n      username: \"\",\n      email: \"\",\n      phone_number: \"\",\n      active: \"\",\n      id: null\n    };\n    this.showForm = false;\n    this.getUsersDetails();\n  }\n  getUsersDetails() {\n    this.userService.getUsers().subscribe(resp => {\n      console.log(resp);\n      this.userDetails = resp;\n    }, err => {\n      console.log(err);\n    });\n  }\n  deleteUser(user) {\n    this.userService.deleteUsers(user.userid).subscribe(resp => {\n      console.log(resp);\n      this.getUsersDetails();\n    }, err => {\n      console.log(err);\n    });\n  }\n  edit(studuent) {\n    this.studentToUpdate = studuent;\n  }\n  updateUser() {\n    this.userService.updateStudents(this.studentToUpdate).subscribe(resp => {\n      console.log(resp);\n      this.showForm = false;\n    }, err => {\n      console.log(err);\n    });\n  }\n  openForm(studuent) {\n    this.studentToUpdate = studuent;\n    this.showForm = true;\n  }\n  closeForm() {\n    this.showForm = false;\n  }\n}\nListUsersComponent.ɵfac = function ListUsersComponent_Factory(t) {\n  return new (t || ListUsersComponent)(i0.ɵɵdirectiveInject(i1.UserService));\n};\nListUsersComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ListUsersComponent,\n  selectors: [[\"app-list-users\"]],\n  decls: 27,\n  vars: 1,\n  consts: [[1, \"table-responsive\"], [1, \"table\"], [2, \"color\", \"black\"], [\"scope\", \"col\"], [\"scope\", \"col\", 2, \"color\", \"white\"], [4, \"ngFor\", \"ngForOf\"], [1, \"container-fluid\", \"pt-4\", \"px-4\", \"mat-elevation-z8\"], [1, \"row\", \"vh-100\", \"rounded\", \"align-items-center\", \"justify-content-center\", \"mx-0\"], [1, \"col-md-6\", \"text-center\"], [1, \"container-fluid\", \"pt-4\", \"px-4\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", 3, \"click\"]],\n  template: function ListUsersComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"table\", 1)(2, \"thead\", 2)(3, \"tr\")(4, \"th\", 3);\n      i0.ɵɵtext(5, \"#\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"th\", 4);\n      i0.ɵɵtext(7, \"First Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"th\", 3);\n      i0.ɵɵtext(9, \"Last Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"th\", 3);\n      i0.ɵɵtext(11, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"th\", 3);\n      i0.ɵɵtext(13, \"Cin\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"th\", 3);\n      i0.ɵɵtext(15, \"Phone Number\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"th\", 3);\n      i0.ɵɵtext(17, \"Edit\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"th\", 3);\n      i0.ɵɵtext(19, \"Delete\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(20, \"tbody\", 2);\n      i0.ɵɵtemplate(21, ListUsersComponent_tr_21_Template, 19, 6, \"tr\", 5);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(22, \"div\", 6);\n      i0.ɵɵelement(23, \"router-outlet\");\n      i0.ɵɵelementStart(24, \"div\", 7);\n      i0.ɵɵelement(25, \"div\", 8);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(26, \"div\", 9);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(21);\n      i0.ɵɵproperty(\"ngForOf\", ctx.userDetails);\n    }\n  },\n  dependencies: [i2.NgForOf, i3.RouterOutlet],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","ListUsersComponent","constructor","userService","username","email","phone_number","active","id","getUsersDetails","getUsers","subscribe","resp","console","log","userDetails","err","deleteUser","user","deleteUsers","userid","edit","studuent","studentToUpdate","updateUser","updateStudents","showForm","openForm","closeForm","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\IHEB\\Desktop\\User-final\\pidev-vff\\front\\src\\app\\User\\Back_end\\list-users\\list-users.component.html","C:\\Users\\IHEB\\Desktop\\User-final\\pidev-vff\\front\\src\\app\\User\\Back_end\\list-users\\list-users.component.ts"],"sourcesContent":["    \n                <!-- Navbar End -->\n    <div class=\"table-responsive\">\n        <table class=\"table\">\n            <thead style=\"color: black;\">\n                <tr>\n                    <th scope=\"col\">#</th>\n                    <th scope=\"col\" style=\"color: white;\">First Name</th>\n                    <th scope=\"col\">Last Name</th>\n                    <th scope=\"col\">Email</th>\n                    <th scope=\"col\">Cin</th>\n                    <th scope=\"col\">Phone Number</th>\n                    <th scope=\"col\">Edit</th>\n                    <th scope=\"col\">Delete</th>\n                </tr>\n            </thead>\n            <tbody style=\"color: black;\">\n                <tr *ngFor=\"let user of userDetails\">\n                    <td>{{user.userid}}</td>\n                    <td>{{user.firstname}}</td>\n                    <td>{{user.lastname}}</td>\n                    <td>{{user.email}}</td>\n                    <td>{{user.cin}}</td>\n                    <td>{{user.phone}}</td>\n    \n                    <td><button (click)=\"openForm(user)\" type=\"button\" class=\"btn btn-danger\" >Edit</button></td>\n                    <td><button type=\"button\" class=\"btn btn-danger\" (click)=\"deleteUser(user)\">Delete</button></td>\n                </tr>\n    \n    \n            </tbody>\n        </table>\n    </div>\n    \n                <!-- Blank Start -->\n                <div class=\"container-fluid pt-4 px-4 mat-elevation-z8\">\n    \n    \n                    <router-outlet></router-outlet>\n    \n                    <div class=\"row vh-100  rounded align-items-center justify-content-center mx-0\">\n                        \n                        <div class=\"col-md-6 text-center\">\n    \n                        </div>\n                    </div>\n                </div>\n                <!-- Blank End -->\n    \n    \n                <!-- Footer Start -->\n                <div class=\"container-fluid pt-4 px-4\">\n    \n                </div>\n                <!-- Footer End -->\n       \n\n\n","import { Component } from '@angular/core';\nimport { UserService } from '../user.service';\n\n@Component({\n  selector: 'app-list-users',\n  templateUrl: './list-users.component.html',\n  styleUrls: ['./list-users.component.css']\n})\nexport class ListUsersComponent {\n  userDetails = null as any;\n\n  studentToUpdate = {\n    username: \"\",\n    email: \"\",\n    phone_number: \"\",\n    active: \"\",\n    id: null\n  }\n  showForm = false;\n\n  constructor(private userService: UserService) {\n    this.getUsersDetails();\n  }\n\n  getUsersDetails() {\n    this.userService.getUsers().subscribe(\n      (resp) => {\n        console.log(resp);\n        this.userDetails = resp;\n      },\n      (err) => {\n        console.log(err);\n      }\n    );\n  }\n  deleteUser(user: any) {\n    this.userService.deleteUsers(user.userid).subscribe(\n      (resp) => {\n        console.log(resp);\n        this.getUsersDetails();\n      },\n      (err) => {\n        console.log(err);\n      }\n    );\n  }\n  edit(studuent: any) {\n    this.studentToUpdate = studuent;\n  }\n\n  updateUser() {\n    this.userService.updateStudents(this.studentToUpdate).subscribe(\n      (resp) => {\n        console.log(resp);\n        this.showForm = false;\n\n      },\n      (err) => {\n        console.log(err);\n      }\n    );\n  }\n\n  openForm(studuent: any) {\n\n    this.studentToUpdate = studuent;\n    this.showForm = true;\n\n  }\n\n  closeForm() {\n    this.showForm = false;\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}